(function() {var implementors = {};
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Unpin for Drain&lt;'a, A&gt;","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]}];
implementors["encoding"] = [{"text":"impl Unpin for CodecError","synthetic":true,"types":[]},{"text":"impl Unpin for DecoderTrap","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderTrap","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for ASCIIEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ASCIIEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for ASCIIDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for SingleByteEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for SingleByteEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for SingleByteDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for UTF8Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for UTF8Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for UTF8Decoder","synthetic":true,"types":[]},{"text":"impl Unpin for Little","synthetic":true,"types":[]},{"text":"impl Unpin for Big","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UTF16Encoding&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UTF16Encoder&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UTF16Decoder&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Windows949Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for Windows949Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for EUCJPEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for EUCJPEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for Windows31JEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for Windows31JEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for ISO2022JPEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ISO2022JPEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for GBK","synthetic":true,"types":[]},{"text":"impl Unpin for GB18030","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for GBEncoding&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for GBEncoder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HZEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for HZEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for BigFive2003Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for BigFive2003Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderOnlyUTF8Encoding","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Errors","synthetic":true,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Unpin for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rustyknife"] = [{"text":"impl Unpin for Legacy","synthetic":true,"types":[]},{"text":"impl Unpin for Intl","synthetic":true,"types":[]},{"text":"impl Unpin for ContentDisposition","synthetic":true,"types":[]},{"text":"impl Unpin for ContentTransferEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for Param","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Params&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Keyword","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for SMTPString","synthetic":true,"types":[]},{"text":"impl Unpin for ForwardPath","synthetic":true,"types":[]},{"text":"impl Unpin for ReversePath","synthetic":true,"types":[]},{"text":"impl Unpin for Command","synthetic":true,"types":[]},{"text":"impl Unpin for Mailbox","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Address","synthetic":true,"types":[]},{"text":"impl Unpin for DSNMailParams","synthetic":true,"types":[]},{"text":"impl Unpin for Notify","synthetic":true,"types":[]},{"text":"impl Unpin for DSNRet","synthetic":true,"types":[]},{"text":"impl Unpin for Domain","synthetic":true,"types":[]},{"text":"impl Unpin for QuotedString","synthetic":true,"types":[]},{"text":"impl Unpin for DotAtom","synthetic":true,"types":[]},{"text":"impl Unpin for Mailbox","synthetic":true,"types":[]},{"text":"impl Unpin for LocalPart","synthetic":true,"types":[]},{"text":"impl Unpin for DomainPart","synthetic":true,"types":[]},{"text":"impl Unpin for AddressLiteral","synthetic":true,"types":[]},{"text":"impl Unpin for Param","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for ArrayVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Unpin for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BidiClass","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Unpin for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNormalized","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()