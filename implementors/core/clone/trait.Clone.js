(function() {var implementors = {};
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Clone for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Array&lt;Item = u8&gt; + Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CapacityError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Clone for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Clone for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Clone for DecodeError","synthetic":false,"types":[]},{"text":"impl Clone for CharacterSet","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["encoding"] = [{"text":"impl Clone for DecoderTrap","synthetic":false,"types":[]},{"text":"impl Clone for EncoderTrap","synthetic":false,"types":[]},{"text":"impl Clone for ErrorEncoding","synthetic":false,"types":[]},{"text":"impl Clone for ErrorEncoder","synthetic":false,"types":[]},{"text":"impl Clone for ErrorDecoder","synthetic":false,"types":[]},{"text":"impl Clone for ASCIIEncoding","synthetic":false,"types":[]},{"text":"impl Clone for ASCIIEncoder","synthetic":false,"types":[]},{"text":"impl Clone for ASCIIDecoder","synthetic":false,"types":[]},{"text":"impl Clone for SingleByteEncoding","synthetic":false,"types":[]},{"text":"impl Clone for SingleByteEncoder","synthetic":false,"types":[]},{"text":"impl Clone for SingleByteDecoder","synthetic":false,"types":[]},{"text":"impl Clone for UTF8Encoding","synthetic":false,"types":[]},{"text":"impl Clone for UTF8Encoder","synthetic":false,"types":[]},{"text":"impl Clone for UTF8Decoder","synthetic":false,"types":[]},{"text":"impl Clone for Little","synthetic":false,"types":[]},{"text":"impl Clone for Big","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for UTF16Encoding&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for UTF16Encoder&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Windows949Encoding","synthetic":false,"types":[]},{"text":"impl Clone for Windows949Encoder","synthetic":false,"types":[]},{"text":"impl Clone for EUCJPEncoding","synthetic":false,"types":[]},{"text":"impl Clone for EUCJPEncoder","synthetic":false,"types":[]},{"text":"impl Clone for Windows31JEncoding","synthetic":false,"types":[]},{"text":"impl Clone for Windows31JEncoder","synthetic":false,"types":[]},{"text":"impl Clone for ISO2022JPEncoding","synthetic":false,"types":[]},{"text":"impl Clone for ISO2022JPEncoder","synthetic":false,"types":[]},{"text":"impl Clone for GBK","synthetic":false,"types":[]},{"text":"impl Clone for GB18030","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for GBEncoding&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for GBEncoder&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HZEncoding","synthetic":false,"types":[]},{"text":"impl Clone for HZEncoder","synthetic":false,"types":[]},{"text":"impl Clone for BigFive2003Encoding","synthetic":false,"types":[]},{"text":"impl Clone for BigFive2003Encoder","synthetic":false,"types":[]},{"text":"impl Clone for EncoderOnlyUTF8Encoding","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Clone for ErrorCode","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["rustyknife"] = [{"text":"impl Clone for Param","synthetic":false,"types":[]},{"text":"impl Clone for Keyword","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for SMTPString","synthetic":false,"types":[]},{"text":"impl Clone for ForwardPath","synthetic":false,"types":[]},{"text":"impl Clone for ReversePath","synthetic":false,"types":[]},{"text":"impl Clone for Mailbox","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Address","synthetic":false,"types":[]},{"text":"impl Clone for Domain","synthetic":false,"types":[]},{"text":"impl Clone for LocalPart","synthetic":false,"types":[]},{"text":"impl Clone for QuotedString","synthetic":false,"types":[]},{"text":"impl Clone for DotAtom","synthetic":false,"types":[]},{"text":"impl Clone for DomainPart","synthetic":false,"types":[]},{"text":"impl Clone for AddressLiteral","synthetic":false,"types":[]},{"text":"impl Clone for Mailbox","synthetic":false,"types":[]},{"text":"impl Clone for Param","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Clone + Array&gt; Clone for ArrayVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + Array&gt; Clone for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for BidiClass","synthetic":false,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Decompositions&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Recompositions&lt;I&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()